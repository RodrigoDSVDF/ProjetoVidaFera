import time
import streamlit as st
from langchain_core.messages import AIMessage, HumanMessage
from langchain_core.prompts import ChatPromptTemplate, MessagesPlaceholder
from langchain.chains import LLMChain
from langchain.memory import ConversationBufferWindowMemory
from langchain.chat_models import ChatOpenAI

from dotenv import load_dotenv

load_dotenv()

# ========== BASE DE CONHECIMENTO CORRIGIDA ==========
MANUAL_INFO = {
    "titulo": "Manual de Alta Performance com IA",
    "autor": "Rodrigo Carvalho",
    "conteudo": {
        "capitulos": [
            "1. Fundamentos da InteligÃªncia Aumentada",
            "2. AutomaÃ§Ã£o Inteligente de Tarefas",
            "3. Ferramentas exclusivas para produtividade",
            "4. AnÃ¡lise de Dados com IA",
            "5. EstratÃ©gias de Produtividade AvanÃ§adas",
            "6. AtualizaÃ§Ã£o constante do Manual com novas ferramentas",
            "7. OtimizaÃ§Ã£o de Processos Empresariais",
            "8. TÃ©cnicas AvanÃ§adas de Produtividade",
            "9. Breve crÃ­tica ao modo de usar a InteligÃªncia Artificial e seus prejuÃ­zos",
            "10.Papo filosÃ³fico sobre I.A e consciÃªncia humana",
            "11.InteligÃªncia artificial na EducaÃ§Ã£o"
        ],
        "ferramentas": [
            "AutomaÃ§Ãµes para negÃ³cios",
            "Assistentes  Inteligentes e Personalizados",
            "Sistemas de GestÃ£o Inteligente"
        ],
        "beneficios": [
            "ReduÃ§Ã£o de 40% no tempo de tarefas operacionais",
            "O livro oferece atualizaÃ§Ã£o vitalÃ­cia"
            "Melhor aproveitamento nos estudos",
            "Aumento de produtividade e eficiÃªncia"
            "Aumento de receita nas vendas"
            "Aumento de 60% na precisÃ£o de anÃ¡lises",
            "Checklist de implementaÃ§Ã£o passo a passo"
            "Valor do Livro Ã© por tempo ilimitado e estÃ¡ 19,90"
        ]
    }
}

# ========== CLASSE DE MEMÃ“RIA CORRIGIDA ==========
class ManualMemory:
    def __init__(self):
        self.context = []
    
    def add_context(self, user_input: str, response: str):
        self.context.append(f"UsuÃ¡rio: {user_input}\nAssistente: {response}")
    
    def get_relevant_info(self, query: str) -> str:
        keywords = ["ferramenta", "capÃ­tulo", "benefÃ­cio", "como funciona", "exemplo"]
        if any(kw in query.lower() for kw in keywords):
            return (
                f"InformaÃ§Ãµes do Manual:\n"
                # CORREÃ‡ÃƒO DOS PARÃŠNTESES AQUI
                f"CapÃ­tulos: {', '.join(MANUAL_INFO['conteudo']['capitulos'])}\n"
                f"Ferramentas: {', '.join(MANUAL_INFO['conteudo']['ferramentas'])}\n"
                f"BenefÃ­cios: {', '.join(MANUAL_INFO['conteudo']['beneficios'])}"
            )
        return ""

# ========== CONFIGURAÃ‡ÃƒO DO PROMPT ==========
def get_enhanced_prompt():
    return ChatPromptTemplate.from_messages([
        ("system", 
         f"""VocÃª Ã© o assistente especialista no {MANUAL_INFO['titulo']}. 
         Use estas informaÃ§Ãµes em suas respostas:
         Autor: {MANUAL_INFO['autor']}
         CapÃ­tulos: {MANUAL_INFO['conteudo']['capitulos']}
         Ferramentas: {MANUAL_INFO['conteudo']['ferramentas']}
         BenefÃ­cios: {MANUAL_INFO['conteudo']['beneficios']}
         Sempre seja amigÃ¡vel e profissional."""
        ),
        MessagesPlaceholder(variable_name="chat_history"),
        ("human", "{input}"),
    ])

# ========== LÃ“GICA PRINCIPAL ==========
class SalesFunnel:
    def __init__(self):
        self.memory = ManualMemory()
        self.llm_chain = LLMChain(
            llm=ChatOpenAI(model="gpt-4o-mini", temperature=0.7),
            prompt=get_enhanced_prompt(),
            memory=ConversationBufferWindowMemory(
                memory_key="chat_history",
                input_key="input",
                k=5,
                return_messages=True
            )
        )
    
    def generate_response(self, user_input: str) -> str:
        context = self.memory.get_relevant_info(user_input)
        response = self.llm_chain.invoke({
            "input": f"{context}\nPergunta: {user_input}"
        })
        self.memory.add_context(user_input, response['text'])
        return response['text']

# ========== INTERFACE ==========
st.set_page_config(
    page_title=f"Especialista em {MANUAL_INFO['titulo']}",
    page_icon="ðŸ¤–",
    layout="centered"
)

# --- ModificaÃ§Ãµes Pontuais ---
# 1. InclusÃ£o de espaÃ§o para imagem
st.image("Design sem nome (5).png", caption=MANUAL_INFO['titulo'])

# 2. Ajuste da janela de contexto para caber em telas menores (CSS responsivo)
st.markdown(
    """
    <style>
    /* Ajusta a largura do conteÃºdo para telas menores */
    .css-1d391kg, .css-1kyxreq {
        max-width: 100% !important;
        word-wrap: break-word;
    }
    </style>
    """,
    unsafe_allow_html=True
)
# --- Fim das ModificaÃ§Ãµes ---

if "funnel" not in st.session_state:
    st.session_state.funnel = SalesFunnel()
    st.session_state.chat_history = [
        AIMessage(content=f"ðŸŒŸ OlÃ¡! Sou o especialista em {MANUAL_INFO['titulo']}. Como posso ajudÃ¡-lo hoje? ðŸ˜Š")
    ]

for msg in st.session_state.chat_history:
    with st.chat_message("AI" if isinstance(msg, AIMessage) else "Human"):
        st.write(msg.content)

user_input = st.chat_input("Escreva sua pergunta sobre IA aqui...")

if user_input:
    st.session_state.chat_history.append(HumanMessage(content=user_input))
    
    with st.chat_message("Human"):
        st.write(user_input)
    
    with st.chat_message("AI"):
        response = st.session_state.funnel.generate_response(user_input)
        response_placeholder = st.empty()
        full_response = ""
        
        for char in response:
            full_response += char
            response_placeholder.markdown(full_response)
            time.sleep(0.03)
        
    st.session_state.chat_history.append(AIMessage(content=full_response))
    
    if "compra" in full_response.lower():
        st.markdown("### ðŸš€ Garanta Seu Acesso Imediato! Por apenas 19.90")
        st.link_button("Adquirir Manual Completo", "https://pay.cakto.com.br/5dUKrWD")
